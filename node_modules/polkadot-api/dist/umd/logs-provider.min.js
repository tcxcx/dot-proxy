(function(d,f){typeof exports=="object"&&typeof module<"u"?f(exports):typeof define=="function"&&define.amd?define(["exports"],f):(d=typeof globalThis<"u"?globalThis:d||self,f(d.papiLogsProvider={}))})(this,function(d){"use strict";var f=Object.defineProperty,_=(t,e,s)=>e in t?f(t,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[e]=s,T=(t,e,s)=>_(t,typeof e!="symbol"?e+"":e,s);class ${constructor(...e){T(this,"first"),T(this,"last"),e.length!==0&&e.forEach(s=>this.push(s))}push(e){const s={value:e};this.last===void 0?(this.last=s,this.first=this.last):(this.last.next=s,this.last=s)}pop(){const e=this.first?.value;return this.first&&(this.first=this.first.next,this.first||(this.last=void 0)),e}peek(){return this.first?.value}}const x=">>",I="<<",b=t=>{const e=new Map;let s=-1;for(let c=0;c<t.length;c++){const[,l,u,h,a]=t[c].match(/^(\d*)-(.{24})-(.{2})-(.*)$/),o=Number(l);s=new Date(u).getTime();const n=e.get(o)??[];e.set(o,n),n.push({clientId:o,tick:s,type:h,msg:a})}return e},v=t=>{const e='TaggedTransactionQueue_validate_transaction","',s=t.lastIndexOf(e)+e.length+4,c=t.indexOf('"',s+1);return t.substring(s,c-64)},k={speed:1},O=(t,e={})=>{const{speed:s}={...k,...e};let c=1;const l=b(t[t.length-1]?t:t.slice(0,-1));return u=>{const h=c++,a=l.get(h),o=new $;let n=0,m=new Map;const w=async()=>{if(o.peek())for(;n<a.length&&g!==void 0;){const i=a[n];if(m.forEach((r,p)=>{i.msg=i.msg.replace(p,r)}),i.type===x){if(!o.peek()){g=setTimeout(w,100);break}const r=o.pop();if(i.msg.includes("TaggedTransactionQueue_validate_transaction")&&r?.includes("TaggedTransactionQueue_validate_transaction")&&(m.set(v(i.msg),v(r)),m.forEach((p,y)=>{i.msg=i.msg.replace(y,p)})),r!==i.msg)throw console.log(`recieved: "${r}"`),console.log(`expected: "${i.msg}"`),new Error("unexpected messaged was received")}else{u(i.msg);const r=a[n+1];r&&await new Promise(p=>setTimeout(p,(r.tick-i.tick)/s))}n++}};let g=setTimeout(w,200);return{send:i=>{o.push(i)},disconnect:()=>{clearTimeout(g),g=void 0}}}},P=(t,e)=>{let s=1,c,l="";const u=()=>{l=new Date().toISOString(),c=setTimeout(u,0)};return h=>{const a=s++;u();const o=e(n=>{t(`${a}-${l}-${I}-${n}`),h(n)});return{...o,send:n=>{t(`${a}-${l}-${x}-${n}`),o.send(n)},disconnect(){clearTimeout(c),o.disconnect()}}}};d.logsProvider=O,d.withLogsRecorder=P});
