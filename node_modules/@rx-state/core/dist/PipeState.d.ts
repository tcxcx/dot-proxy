import { OperatorFunction } from "rxjs";
import { DefaultedStateObservable, StateObservable } from "./StateObservable";
import { WithDefaultOperator } from "./withDefault";
export interface PipeState<T> {
    <A>(defaultOp: WithDefaultOperator<T, A>): DefaultedStateObservable<T | A>;
    <A, B>(op1: OperatorFunction<T, A>, defaultOp: WithDefaultOperator<A, B>): DefaultedStateObservable<A | B>;
    <A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, defaultOp: WithDefaultOperator<B, C>): DefaultedStateObservable<B | C>;
    <A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, defaultOp: WithDefaultOperator<C, D>): DefaultedStateObservable<C | D>;
    <A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, defaultOp: WithDefaultOperator<D, E>): DefaultedStateObservable<D | E>;
    <A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, defaultOp: WithDefaultOperator<E, F>): DefaultedStateObservable<E | F>;
    <A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, defaultOp: WithDefaultOperator<F, G>): DefaultedStateObservable<F | G>;
    <A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, defaultOp: WithDefaultOperator<G, H>): DefaultedStateObservable<G | H>;
    <A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, defaultOp: WithDefaultOperator<H, I>): DefaultedStateObservable<H | I>;
    (): StateObservable<T>;
    <A>(op1: OperatorFunction<T, A>): StateObservable<A>;
    <A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): StateObservable<B>;
    <A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): StateObservable<C>;
    <A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): StateObservable<D>;
    <A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): StateObservable<E>;
    <A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): StateObservable<F>;
    <A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): StateObservable<G>;
    <A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): StateObservable<H>;
    <A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): StateObservable<I>;
    <A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): StateObservable<unknown>;
}
