import { Observable } from "rxjs";
import { PipeState } from "./PipeState";
export declare class StatePromise<T> extends Promise<T> {
    constructor(cb: (res: (value: T) => void, rej: any) => void);
}
export interface StateObservable<T> extends Observable<T> {
    getRefCount: () => number;
    getValue: (filter?: (value: T) => boolean) => T | StatePromise<T>;
    pipe: PipeState<T>;
}
export interface DefaultedStateObservable<T> extends StateObservable<T> {
    getValue: (filter?: (value: T) => boolean) => T;
    getDefaultValue: () => T;
    pipe: PipeState<T>;
}
