{"version":3,"file":"sm-provider.mjs","sources":["../../src/sm-provider.ts"],"sourcesContent":["import {\n  AddChainError,\n  AlreadyDestroyedError,\n  CrashError,\n  JsonRpcDisabledError,\n  type Chain,\n} from \"@polkadot-api/smoldot\"\nimport type { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { getSyncProvider } from \"@polkadot-api/json-rpc-provider-proxy\"\n\nlet pending: Promise<Chain> | null\n\nconst isRecoverable = (error: any) =>\n  !(\n    error instanceof AddChainError ||\n    error instanceof AlreadyDestroyedError ||\n    error instanceof CrashError ||\n    error instanceof JsonRpcDisabledError\n  )\n\nexport const getSmProvider = (chain: Chain | Promise<Chain>): JsonRpcProvider =>\n  getSyncProvider(async () => {\n    while (pending) await pending\n\n    let resolvedChain: Chain\n    if (chain instanceof Promise) {\n      pending = chain\n      resolvedChain = await chain\n      pending = null\n    } else resolvedChain = chain\n\n    return (listener, onError) => {\n      let listening = true\n      ;(async () => {\n        do {\n          let message = \"\"\n          try {\n            message = await resolvedChain.nextJsonRpcResponse()\n          } catch (e) {\n            if (listening && isRecoverable(e)) onError()\n            return\n          }\n          if (!listening) break\n          listener(message)\n        } while (listening)\n      })()\n\n      return {\n        send(msg: string) {\n          resolvedChain.sendJsonRpc(msg)\n        },\n        disconnect() {\n          listening = false\n          resolvedChain.remove()\n        },\n      }\n    }\n  })\n"],"names":[],"mappings":";;;AAUA,IAAI,OAAA;AAEJ,MAAM,aAAA,GAAgB,CAAC,KAAA,KACrB,EACE,KAAA,YAAiB,iBACjB,KAAiB,YAAA,qBAAA,IACjB,KAAiB,YAAA,UAAA,IACjB,KAAiB,YAAA,oBAAA,CAAA;AAGd,MAAM,aAAgB,GAAA,CAAC,KAC5B,KAAA,eAAA,CAAgB,YAAY;AAC1B,EAAA,OAAO,SAAe,MAAA,OAAA;AAEtB,EAAI,IAAA,aAAA;AACJ,EAAA,IAAI,iBAAiB,OAAS,EAAA;AAC5B,IAAU,OAAA,GAAA,KAAA;AACV,IAAA,aAAA,GAAgB,MAAM,KAAA;AACtB,IAAU,OAAA,GAAA,IAAA;AAAA,SACW,aAAA,GAAA,KAAA;AAEvB,EAAO,OAAA,CAAC,UAAU,OAAY,KAAA;AAC5B,IAAA,IAAI,SAAY,GAAA,IAAA;AACf,IAAA,CAAC,YAAY;AACZ,MAAG,GAAA;AACD,QAAA,IAAI,OAAU,GAAA,EAAA;AACd,QAAI,IAAA;AACF,UAAU,OAAA,GAAA,MAAM,cAAc,mBAAoB,EAAA;AAAA,iBAC3C,CAAG,EAAA;AACV,UAAA,IAAI,SAAa,IAAA,aAAA,CAAc,CAAC,CAAA,EAAW,OAAA,EAAA;AAC3C,UAAA;AAAA;AAEF,QAAA,IAAI,CAAC,SAAW,EAAA;AAChB,QAAA,QAAA,CAAS,OAAO,CAAA;AAAA,OACT,QAAA,SAAA;AAAA,KACR,GAAA;AAEH,IAAO,OAAA;AAAA,MACL,KAAK,GAAa,EAAA;AAChB,QAAA,aAAA,CAAc,YAAY,GAAG,CAAA;AAAA,OAC/B;AAAA,MACA,UAAa,GAAA;AACX,QAAY,SAAA,GAAA,KAAA;AACZ,QAAA,aAAA,CAAc,MAAO,EAAA;AAAA;AACvB,KACF;AAAA,GACF;AACF,CAAC;;;;"}