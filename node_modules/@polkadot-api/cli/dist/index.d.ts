import * as _commander_js_extra_typings from '@commander-js/extra-typings';
import { V15, V14, HexString } from '@polkadot-api/substrate-bindings';

interface CommonOptions {
    config?: string;
    skipCodegen?: boolean;
    whitelist?: string;
}

interface AddOptions extends CommonOptions {
    file?: string;
    wsUrl?: string;
    chainSpec?: string;
    name?: string;
    wasm?: string;
    noPersist?: boolean;
}
declare function add(key: string, options: AddOptions): Promise<void>;

interface GenerateOptions extends CommonOptions {
    clientLibrary?: string;
}
declare function generate(opts: GenerateOptions): Promise<void>;

interface InkAddOptions extends CommonOptions {
    key?: string;
}
declare const ink: {
    add(file: string, options: InkAddOptions): Promise<void>;
    remove(key: string, options: CommonOptions): Promise<void>;
};

declare function remove(key: string, options: CommonOptions): Promise<void>;

declare function update(keysInput: string | undefined, options: CommonOptions): Promise<void>;

type Commands = {
    add: typeof add;
    generate: typeof generate;
    remove: typeof remove;
    update: typeof update;
    ink: typeof ink;
    version: string;
};
declare function getCli({ add, generate, remove, update, ink, version, }: Commands): _commander_js_extra_typings.Command<[], {}, {}>;

type EntryConfig = {
    metadata: string;
    genesis?: string;
} | {
    chainSpec: string;
    metadata?: string;
    genesis?: string;
} | {
    wsUrl: string;
    metadata?: string;
    genesis?: string;
} | {
    chain: string;
    metadata?: string;
    genesis?: string;
};
interface PapiConfigOptions {
    noDescriptorsPackage?: boolean;
}
type PapiConfig = {
    version: 0;
    descriptorPath: string;
    entries: Record<string, EntryConfig>;
    ink?: Record<string, string>;
    options?: Partial<PapiConfigOptions>;
};
declare function readPapiConfig(configFile: string | undefined): Promise<PapiConfig | null>;

declare function getMetadata(entry: EntryConfig): Promise<{
    metadata: V15 | V14;
    metadataRaw: Uint8Array;
    genesis?: HexString;
} | null>;

export { type AddOptions, type Commands, type GenerateOptions, type InkAddOptions, add, generate, getCli, getMetadata, ink, readPapiConfig, remove, update };
