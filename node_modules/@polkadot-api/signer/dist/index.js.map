{"version":3,"file":"index.js","sources":["../src/from-raw-signer.ts"],"sourcesContent":["import { mergeUint8 } from \"@polkadot-api/utils\"\nimport type { PolkadotSigner } from \"@polkadot-api/polkadot-signer\"\nimport { getSignBytes, createV4Tx } from \"@polkadot-api/signers-common\"\nimport {\n  Blake2256,\n  decAnyMetadata,\n  V14,\n  V15,\n} from \"@polkadot-api/substrate-bindings\"\n\nexport function getPolkadotSigner(\n  publicKey: Uint8Array,\n  signingType: \"Ecdsa\" | \"Ed25519\" | \"Sr25519\",\n  sign: (input: Uint8Array) => Promise<Uint8Array> | Uint8Array,\n): PolkadotSigner {\n  const signTx = async (\n    callData: Uint8Array,\n    signedExtensions: Record<\n      string,\n      {\n        identifier: string\n        value: Uint8Array\n        additionalSigned: Uint8Array\n      }\n    >,\n    metadata: Uint8Array,\n    _: number,\n    hasher = Blake2256,\n  ) => {\n    let decMeta: V14 | V15\n    try {\n      const tmpMeta = decAnyMetadata(metadata)\n      if (tmpMeta.metadata.tag !== \"v14\" && tmpMeta.metadata.tag !== \"v15\")\n        throw null\n      decMeta = tmpMeta.metadata.value\n    } catch (_) {\n      throw new Error(\"Unsupported metadata version\")\n    }\n    const extra: Array<Uint8Array> = []\n    const additionalSigned: Array<Uint8Array> = []\n    decMeta.extrinsic.signedExtensions.map(({ identifier }) => {\n      const signedExtension = signedExtensions[identifier]\n      if (!signedExtension)\n        throw new Error(`Missing ${identifier} signed extension`)\n      extra.push(signedExtension.value)\n      additionalSigned.push(signedExtension.additionalSigned)\n    })\n\n    const toSign = mergeUint8(callData, ...extra, ...additionalSigned)\n    const signed = await sign(toSign.length > 256 ? hasher(toSign) : toSign)\n    return createV4Tx(decMeta, publicKey, signed, extra, callData, signingType)\n  }\n\n  return {\n    publicKey,\n    signTx,\n    signBytes: getSignBytes(sign),\n  }\n}\n"],"names":["Blake2256","decAnyMetadata","_","mergeUint8","createV4Tx","getSignBytes"],"mappings":";;;;;;AAUgB,SAAA,iBAAA,CACd,SACA,EAAA,WAAA,EACA,IACgB,EAAA;AAChB,EAAA,MAAM,SAAS,OACb,QAAA,EACA,kBAQA,QACA,EAAA,CAAA,EACA,SAASA,2BACN,KAAA;AACH,IAAI,IAAA,OAAA;AACJ,IAAI,IAAA;AACF,MAAM,MAAA,OAAA,GAAUC,iCAAe,QAAQ,CAAA;AACvC,MAAA,IAAI,QAAQ,QAAS,CAAA,GAAA,KAAQ,KAAS,IAAA,OAAA,CAAQ,SAAS,GAAQ,KAAA,KAAA;AAC7D,QAAM,MAAA,IAAA;AACR,MAAA,OAAA,GAAU,QAAQ,QAAS,CAAA,KAAA;AAAA,aACpBC,EAAG,EAAA;AACV,MAAM,MAAA,IAAI,MAAM,8BAA8B,CAAA;AAAA;AAEhD,IAAA,MAAM,QAA2B,EAAC;AAClC,IAAA,MAAM,mBAAsC,EAAC;AAC7C,IAAA,OAAA,CAAQ,UAAU,gBAAiB,CAAA,GAAA,CAAI,CAAC,EAAE,YAAiB,KAAA;AACzD,MAAM,MAAA,eAAA,GAAkB,iBAAiB,UAAU,CAAA;AACnD,MAAA,IAAI,CAAC,eAAA;AACH,QAAA,MAAM,IAAI,KAAA,CAAM,CAAW,QAAA,EAAA,UAAU,CAAmB,iBAAA,CAAA,CAAA;AAC1D,MAAM,KAAA,CAAA,IAAA,CAAK,gBAAgB,KAAK,CAAA;AAChC,MAAiB,gBAAA,CAAA,IAAA,CAAK,gBAAgB,gBAAgB,CAAA;AAAA,KACvD,CAAA;AAED,IAAA,MAAM,SAASC,gBAAW,CAAA,QAAA,EAAU,GAAG,KAAA,EAAO,GAAG,gBAAgB,CAAA;AACjE,IAAM,MAAA,MAAA,GAAS,MAAM,IAAK,CAAA,MAAA,CAAO,SAAS,GAAM,GAAA,MAAA,CAAO,MAAM,CAAA,GAAI,MAAM,CAAA;AACvE,IAAA,OAAOC,yBAAW,OAAS,EAAA,SAAA,EAAW,MAAQ,EAAA,KAAA,EAAO,UAAU,WAAW,CAAA;AAAA,GAC5E;AAEA,EAAO,OAAA;AAAA,IACL,SAAA;AAAA,IACA,MAAA;AAAA,IACA,SAAA,EAAWC,2BAAa,IAAI;AAAA,GAC9B;AACF;;;;"}