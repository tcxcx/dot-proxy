{"version":3,"file":"pjs-signed-extensions-mappers.mjs","sources":["../../src/pjs-signed-extensions-mappers.ts"],"sourcesContent":["import { HexString } from \"@polkadot-api/substrate-bindings\"\nimport {\n  Bytes,\n  Struct,\n  compact,\n  u32,\n  Option,\n  compactBn,\n} from \"@polkadot-api/substrate-bindings\"\nimport { toHex } from \"@polkadot-api/utils\"\n\ntype SignedExtension = {\n  value: Uint8Array\n  additionalSigned: Uint8Array\n}\n\nconst toPjsHex = (value: number | bigint, minByteLen?: number) => {\n  let inner = value.toString(16)\n  inner = (inner.length % 2 ? \"0\" : \"\") + inner\n  const nPaddedBytes = Math.max(0, (minByteLen || 0) - inner.length / 2)\n  return \"0x\" + \"00\".repeat(nPaddedBytes) + inner\n}\n\nexport const CheckGenesis = ({\n  additionalSigned,\n}: SignedExtension): { genesisHash: string } => ({\n  genesisHash: toHex(additionalSigned),\n})\n\nexport const CheckNonce = ({\n  value,\n}: SignedExtension): { nonce: HexString } => {\n  // nonce is a u32 in pjs => 4 bytes\n  return { nonce: toPjsHex(compact.dec(value), 4) }\n}\n\nexport const CheckTxVersion = ({\n  additionalSigned,\n}: SignedExtension): { transactionVersion: HexString } => {\n  return { transactionVersion: toPjsHex(u32.dec(additionalSigned), 4) }\n}\n\nconst assetTxPaymentDec = Struct({\n  tip: compact,\n  asset: Option(Bytes(Infinity)),\n}).dec\n\nexport const ChargeAssetTxPayment = ({\n  value,\n}: SignedExtension): { aseetId?: string; tip?: string } => {\n  const { tip, asset } = assetTxPaymentDec(value)\n\n  return {\n    ...(asset ? { assetId: toHex(asset) } : {}),\n    tip: toPjsHex(tip, 16),\n  }\n}\n\nexport const ChargeTransactionPayment = ({\n  value,\n}: SignedExtension): { tip: HexString } => ({\n  tip: toPjsHex(compactBn.dec(value), 16), // u128 => 16 bytes\n})\n\nexport const CheckMortality = (\n  { value, additionalSigned }: SignedExtension,\n  blockNumber: number,\n): { era: HexString; blockHash: HexString; blockNumber: HexString } => ({\n  era: toHex(value),\n  blockHash: toHex(additionalSigned),\n  blockNumber: toPjsHex(blockNumber, 4),\n})\n\nexport const CheckSpecVersion = ({\n  additionalSigned,\n}: SignedExtension): { specVersion: HexString } => ({\n  specVersion: toPjsHex(u32.dec(additionalSigned), 4),\n})\n\nexport const CheckMetadataHash = ({\n  value,\n  additionalSigned,\n}: SignedExtension): { mode?: number; metadataHash?: HexString } =>\n  value.length && value[0]\n    ? {\n        mode: 1,\n        metadataHash: toHex(\n          additionalSigned.length\n            ? additionalSigned.slice(1)\n            : additionalSigned,\n        ),\n      }\n    : {}\n"],"names":[],"mappings":";;;AAgBA,MAAM,QAAA,GAAW,CAAC,KAAA,EAAwB,UAAwB,KAAA;AAChE,EAAI,IAAA,KAAA,GAAQ,KAAM,CAAA,QAAA,CAAS,EAAE,CAAA;AAC7B,EAAA,KAAA,GAAA,CAAS,KAAM,CAAA,MAAA,GAAS,CAAI,GAAA,GAAA,GAAM,EAAM,IAAA,KAAA;AACxC,EAAM,MAAA,YAAA,GAAe,KAAK,GAAI,CAAA,CAAA,EAAA,CAAI,cAAc,CAAK,IAAA,KAAA,CAAM,SAAS,CAAC,CAAA;AACrE,EAAA,OAAO,IAAO,GAAA,IAAA,CAAK,MAAO,CAAA,YAAY,CAAI,GAAA,KAAA;AAC5C,CAAA;AAEO,MAAM,eAAe,CAAC;AAAA,EAC3B;AACF,CAAiD,MAAA;AAAA,EAC/C,WAAA,EAAa,MAAM,gBAAgB;AACrC,CAAA;AAEO,MAAM,aAAa,CAAC;AAAA,EACzB;AACF,CAA6C,KAAA;AAE3C,EAAO,OAAA,EAAE,OAAO,QAAS,CAAA,OAAA,CAAQ,IAAI,KAAK,CAAA,EAAG,CAAC,CAAE,EAAA;AAClD;AAEO,MAAM,iBAAiB,CAAC;AAAA,EAC7B;AACF,CAA0D,KAAA;AACxD,EAAO,OAAA,EAAE,oBAAoB,QAAS,CAAA,GAAA,CAAI,IAAI,gBAAgB,CAAA,EAAG,CAAC,CAAE,EAAA;AACtE;AAEA,MAAM,oBAAoB,MAAO,CAAA;AAAA,EAC/B,GAAK,EAAA,OAAA;AAAA,EACL,KAAO,EAAA,MAAA,CAAO,KAAM,CAAA,QAAQ,CAAC;AAC/B,CAAC,CAAE,CAAA,GAAA;AAEI,MAAM,uBAAuB,CAAC;AAAA,EACnC;AACF,CAA2D,KAAA;AACzD,EAAA,MAAM,EAAE,GAAA,EAAK,KAAM,EAAA,GAAI,kBAAkB,KAAK,CAAA;AAE9C,EAAO,OAAA;AAAA,IACL,GAAI,QAAQ,EAAE,OAAA,EAAS,MAAM,KAAK,CAAA,KAAM,EAAC;AAAA,IACzC,GAAA,EAAK,QAAS,CAAA,GAAA,EAAK,EAAE;AAAA,GACvB;AACF;AAEO,MAAM,2BAA2B,CAAC;AAAA,EACvC;AACF,CAA4C,MAAA;AAAA,EAC1C,KAAK,QAAS,CAAA,SAAA,CAAU,GAAI,CAAA,KAAK,GAAG,EAAE;AAAA;AACxC,CAAA;AAEO,MAAM,iBAAiB,CAC5B,EAAE,KAAO,EAAA,gBAAA,IACT,WACsE,MAAA;AAAA,EACtE,GAAA,EAAK,MAAM,KAAK,CAAA;AAAA,EAChB,SAAA,EAAW,MAAM,gBAAgB,CAAA;AAAA,EACjC,WAAA,EAAa,QAAS,CAAA,WAAA,EAAa,CAAC;AACtC,CAAA;AAEO,MAAM,mBAAmB,CAAC;AAAA,EAC/B;AACF,CAAoD,MAAA;AAAA,EAClD,aAAa,QAAS,CAAA,GAAA,CAAI,GAAI,CAAA,gBAAgB,GAAG,CAAC;AACpD,CAAA;AAEO,MAAM,oBAAoB,CAAC;AAAA,EAChC,KAAA;AAAA,EACA;AACF,CAAA,KACE,KAAM,CAAA,MAAA,IAAU,KAAM,CAAA,CAAC,CACnB,GAAA;AAAA,EACE,IAAM,EAAA,CAAA;AAAA,EACN,YAAc,EAAA,KAAA;AAAA,IACZ,gBAAiB,CAAA,MAAA,GACb,gBAAiB,CAAA,KAAA,CAAM,CAAC,CACxB,GAAA;AAAA;AAER,CAAA,GACA;;;;"}