{"version":3,"file":"node-worker.js","sources":["../../src/node-worker.ts"],"sourcesContent":["import { parentPort } from \"node:worker_threads\"\nimport { AddChainOptions, Chain, Client, ClientOptions, start } from \"smoldot\"\n\nexport type SmoldotOptions = Omit<ClientOptions, \"portToWorker\">\nexport interface StartMsg {\n  type: \"start\"\n  value: SmoldotOptions\n}\nexport interface AddChainMsg {\n  type: \"add-chain\"\n  value: Omit<AddChainOptions, \"potentialRelayChains\"> & {\n    potentialRelayChainIds?: number[]\n  }\n}\nexport interface TerminateMsg {\n  type: \"terminate\"\n}\nexport interface ChainMsg {\n  type: \"chain\"\n  value: {\n    id: number\n  } & (\n    | {\n        type: \"remove\" | \"receive\" | \"receiveIterable\"\n      }\n    | {\n        type: \"send\"\n        value: string\n      }\n  )\n}\nexport type RequestMessage = StartMsg | AddChainMsg | TerminateMsg | ChainMsg\nexport type CorrelatedRequestMessage = { id: number } & RequestMessage\n\nlet smoldot: Client | null = null\n\nlet chainId = 0\nconst chains = new Map<number, Chain>()\n\nparentPort!.on(\"message\", async (msg: CorrelatedRequestMessage) => {\n  if (msg.type === \"start\") {\n    if (smoldot !== null) {\n      throw new Error(\"Can't call start on a client already started\")\n    }\n    smoldot = start(msg.value)\n    return parentPort?.postMessage({\n      id: msg.id,\n    })\n  }\n\n  if (smoldot === null) {\n    throw new Error(\"Smoldot not started\")\n  }\n\n  switch (msg.type) {\n    case \"add-chain\": {\n      const potentialRelayChains = msg.value.potentialRelayChainIds?.map(\n        (id) => {\n          const chain = chains.get(id)\n          if (!chain) throw new Error(\"Can't reference removed chain\")\n          return chain\n        },\n      )\n      const chain = await smoldot.addChain({\n        ...msg.value,\n        potentialRelayChains,\n      })\n      const id = chainId++\n      chains.set(id, chain)\n      parentPort?.postMessage({\n        id: msg.id,\n        value: id,\n      })\n      break\n    }\n    case \"terminate\":\n      await smoldot.terminate()\n      parentPort?.postMessage({\n        id: msg.id,\n      })\n      smoldot = null\n      chains.clear()\n      break\n    case \"chain\":\n      handleChainMessage(msg, msg.id)\n      break\n  }\n})\n\nasync function handleChainMessage(msg: ChainMsg, id: number) {\n  const chain = chains.get(msg.value.id)\n  if (!chain) throw new Error(\"Can't reference removed chain\")\n\n  switch (msg.value.type) {\n    case \"receive\":\n      parentPort?.postMessage({\n        id,\n        value: await chain.nextJsonRpcResponse(),\n      })\n      break\n    case \"receiveIterable\":\n      parentPort?.postMessage({\n        id,\n        value: await chain.jsonRpcResponses.next(),\n      })\n      break\n    case \"send\":\n      chain.sendJsonRpc(msg.value.value)\n      break\n    case \"remove\":\n      chain.remove()\n      chains.delete(msg.value.id)\n      break\n  }\n}\n"],"names":["parentPort","start","id","chain"],"mappings":"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"}