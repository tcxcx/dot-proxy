{"version":3,"file":"from-node-worker.mjs","sources":["../../../src/from-node-worker.ts"],"sourcesContent":["import { Worker } from \"node:worker_threads\"\nimport type { Chain, Client } from \"smoldot\"\nimport type { RequestMessage, SmoldotOptions } from \"./node-worker\"\n\nconst chainIds = new WeakMap<Chain, number>()\nexport const startFromWorker = (\n  worker: Worker,\n  options: SmoldotOptions = {},\n): Client => {\n  worker.setMaxListeners(0)\n  sendToWorker(worker, {\n    type: \"start\",\n    value: options,\n  })\n\n  return {\n    async addChain(options) {\n      const { potentialRelayChains, ...addChainOptions } = options\n      const id = await sendToWorker(worker, {\n        type: \"add-chain\",\n        value: {\n          ...addChainOptions,\n          potentialRelayChainIds: potentialRelayChains?.map((chain) => {\n            const id = chainIds.get(chain)\n            if (id == null) {\n              throw new Error(\"Only chains created with `addChain` can be used\")\n            }\n            return id\n          }),\n        },\n      })\n\n      const chain: Chain = {\n        jsonRpcResponses: {\n          next: async () =>\n            sendToWorker(worker, {\n              type: \"chain\",\n              value: {\n                id,\n                type: \"receiveIterable\",\n              },\n            }),\n          [Symbol.asyncIterator]() {\n            return this\n          },\n        },\n        nextJsonRpcResponse() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"receive\",\n            },\n          })\n        },\n        remove() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"remove\",\n            },\n          })\n        },\n        sendJsonRpc(value) {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"send\",\n              value,\n            },\n          })\n        },\n      }\n      chainIds.set(chain, id)\n\n      return chain\n    },\n    async terminate() {\n      await sendToWorker(worker, {\n        type: \"terminate\",\n      })\n    },\n  }\n}\n\nlet msgId = 0\nfunction sendToWorker(worker: Worker, msg: RequestMessage): Promise<any> {\n  const id = msgId++\n  worker.postMessage({ ...msg, id })\n  return new Promise((resolve) => {\n    const msgHandler = (response: any) => {\n      if (response.id === id) {\n        resolve(response.value)\n        worker.off(\"message\", msgHandler)\n      }\n    }\n    worker.on(\"message\", msgHandler)\n  })\n}\n"],"names":["options","chain","id"],"mappings":"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"}