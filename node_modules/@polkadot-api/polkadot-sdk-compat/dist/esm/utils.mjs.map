{"version":3,"file":"utils.mjs","sources":["../../src/utils.ts"],"sourcesContent":["import { ParsedJsonRpcProvider } from \"./parsed\"\n\nexport const jsonObj = <T extends {}>(input: T) => ({\n  jsonrpc: \"2.0\",\n  ...input,\n})\nexport const operationNotification = <T extends {}>(\n  subscription: string,\n  event: string,\n  operationId: string,\n  innerResult: T = {} as T,\n) =>\n  jsonObj({\n    method: \"chainHead_v1_followEvent\",\n    params: {\n      subscription,\n      result: {\n        event,\n        operationId,\n        ...innerResult,\n      },\n    },\n  })\n\nconst requestPrefix = \"__INNER_RQ_DesV\"\nexport const getRequest = (base: ParsedJsonRpcProvider) => {\n  let nextId = 0\n  const onGoingRequests = new Map<string, (ok: boolean, x: any) => void>()\n\n  const listener: <T extends { id: string; result: T; error?: any }>(\n    msg: T,\n  ) => boolean = ({ id, error, result }) => {\n    const callback = onGoingRequests.get(id)\n    if (callback) {\n      onGoingRequests.delete(id)\n      if (error) callback(false, error)\n      else callback(true, result)\n    }\n    return !callback\n  }\n\n  let send: <T extends {}>(msg: T) => void = () => {}\n  const provider: ParsedJsonRpcProvider = (onMsg) => {\n    const { send: _send, disconnect } = base((msg) => {\n      if (listener(msg as any)) onMsg(msg)\n    })\n    send = _send\n    return {\n      send,\n      disconnect: () => {\n        onGoingRequests.clear()\n        disconnect()\n      },\n    }\n  }\n\n  const request = <T>(\n    method: string,\n    params: Array<any>,\n    onSuccess: (x: T) => void,\n    onError: (e: any) => void,\n  ): void => {\n    const id = requestPrefix + nextId++\n    onGoingRequests.set(id, (isOk, value) => {\n      ;(isOk ? onSuccess : onError)(value)\n    })\n    send(jsonObj({ id, method, params }))\n  }\n\n  return [provider, request] as const\n}\n"],"names":[],"mappings":"AAEa,MAAA,OAAA,GAAU,CAAe,KAAc,MAAA;AAAA,EAClD,OAAS,EAAA,KAAA;AAAA,EACT,GAAG;AACL,CAAA;AACa,MAAA,qBAAA,GAAwB,CACnC,YACA,EAAA,KAAA,EACA,aACA,WAAiB,GAAA,OAEjB,OAAQ,CAAA;AAAA,EACN,MAAQ,EAAA,0BAAA;AAAA,EACR,MAAQ,EAAA;AAAA,IACN,YAAA;AAAA,IACA,MAAQ,EAAA;AAAA,MACN,KAAA;AAAA,MACA,WAAA;AAAA,MACA,GAAG;AAAA;AACL;AAEJ,CAAC;AAEH,MAAM,aAAgB,GAAA,iBAAA;AACT,MAAA,UAAA,GAAa,CAAC,IAAgC,KAAA;AACzD,EAAA,IAAI,MAAS,GAAA,CAAA;AACb,EAAM,MAAA,eAAA,uBAAsB,GAA2C,EAAA;AAEvE,EAAA,MAAM,WAES,CAAC,EAAE,EAAI,EAAA,KAAA,EAAO,QAAa,KAAA;AACxC,IAAM,MAAA,QAAA,GAAW,eAAgB,CAAA,GAAA,CAAI,EAAE,CAAA;AACvC,IAAA,IAAI,QAAU,EAAA;AACZ,MAAA,eAAA,CAAgB,OAAO,EAAE,CAAA;AACzB,MAAI,IAAA,KAAA,EAAgB,QAAA,CAAA,KAAA,EAAO,KAAK,CAAA;AAAA,WAC3B,QAAA,CAAS,MAAM,MAAM,CAAA;AAAA;AAE5B,IAAA,OAAO,CAAC,QAAA;AAAA,GACV;AAEA,EAAA,IAAI,OAAuC,MAAM;AAAA,GAAC;AAClD,EAAM,MAAA,QAAA,GAAkC,CAAC,KAAU,KAAA;AACjD,IAAA,MAAM,EAAE,IAAM,EAAA,KAAA,EAAO,YAAe,GAAA,IAAA,CAAK,CAAC,GAAQ,KAAA;AAChD,MAAA,IAAI,QAAS,CAAA,GAAU,CAAG,EAAA,KAAA,CAAM,GAAG,CAAA;AAAA,KACpC,CAAA;AACD,IAAO,IAAA,GAAA,KAAA;AACP,IAAO,OAAA;AAAA,MACL,IAAA;AAAA,MACA,YAAY,MAAM;AAChB,QAAA,eAAA,CAAgB,KAAM,EAAA;AACtB,QAAW,UAAA,EAAA;AAAA;AACb,KACF;AAAA,GACF;AAEA,EAAA,MAAM,OAAU,GAAA,CACd,MACA,EAAA,MAAA,EACA,WACA,OACS,KAAA;AACT,IAAA,MAAM,KAAK,aAAgB,GAAA,MAAA,EAAA;AAC3B,IAAA,eAAA,CAAgB,GAAI,CAAA,EAAA,EAAI,CAAC,IAAA,EAAM,KAAU,KAAA;AACtC,MAAC,CAAA,IAAA,GAAO,SAAY,GAAA,OAAA,EAAS,KAAK,CAAA;AAAA,KACpC,CAAA;AACD,IAAA,IAAA,CAAK,QAAQ,EAAE,EAAA,EAAI,MAAQ,EAAA,MAAA,EAAQ,CAAC,CAAA;AAAA,GACtC;AAEA,EAAO,OAAA,CAAC,UAAU,OAAO,CAAA;AAC3B;;;;"}