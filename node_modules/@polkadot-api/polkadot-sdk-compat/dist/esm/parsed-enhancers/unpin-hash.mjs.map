{"version":3,"file":"unpin-hash.mjs","sources":["../../../src/parsed-enhancers/unpin-hash.ts"],"sourcesContent":["import { chainHead } from \"@/methods\"\nimport type { ParsedJsonRpcEnhancer } from \"@/parsed\"\n\nexport const unpinHash: ParsedJsonRpcEnhancer = (base) => (onMsg) => {\n  const { send: _send, disconnect } = base(onMsg)\n\n  const send = (msg: { id?: string; method?: string; params?: Array<any> }) => {\n    const { method, params, id, ...rest } = msg\n    if (method == chainHead.unpin && params && Array.isArray(params[1])) {\n      params[1].forEach((hash, idx) => {\n        _send({\n          ...rest,\n          id: idx === 0 ? id : `${id}-patched-${idx}`,\n          method,\n          params: [params[0], hash],\n        })\n      })\n    } else _send(msg)\n  }\n\n  return { send, disconnect }\n}\n"],"names":[],"mappings":";;AAGO,MAAM,SAAmC,GAAA,CAAC,IAAS,KAAA,CAAC,KAAU,KAAA;AACnE,EAAA,MAAM,EAAE,IAAM,EAAA,KAAA,EAAO,UAAW,EAAA,GAAI,KAAK,KAAK,CAAA;AAE9C,EAAM,MAAA,IAAA,GAAO,CAAC,GAA+D,KAAA;AAC3E,IAAA,MAAM,EAAE,MAAQ,EAAA,MAAA,EAAQ,EAAI,EAAA,GAAG,MAAS,GAAA,GAAA;AACxC,IAAI,IAAA,MAAA,IAAU,UAAU,KAAS,IAAA,MAAA,IAAU,MAAM,OAAQ,CAAA,MAAA,CAAO,CAAC,CAAC,CAAG,EAAA;AACnE,MAAA,MAAA,CAAO,CAAC,CAAA,CAAE,OAAQ,CAAA,CAAC,MAAM,GAAQ,KAAA;AAC/B,QAAM,KAAA,CAAA;AAAA,UACJ,GAAG,IAAA;AAAA,UACH,IAAI,GAAQ,KAAA,CAAA,GAAI,KAAK,CAAG,EAAA,EAAE,YAAY,GAAG,CAAA,CAAA;AAAA,UACzC,MAAA;AAAA,UACA,MAAQ,EAAA,CAAC,MAAO,CAAA,CAAC,GAAG,IAAI;AAAA,SACzB,CAAA;AAAA,OACF,CAAA;AAAA,KACH,YAAa,GAAG,CAAA;AAAA,GAClB;AAEA,EAAO,OAAA,EAAE,MAAM,UAAW,EAAA;AAC5B;;;;"}