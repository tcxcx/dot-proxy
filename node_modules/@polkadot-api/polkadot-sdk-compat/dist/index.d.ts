import * as _polkadot_api_json_rpc_provider from '@polkadot-api/json-rpc-provider';
import { JsonRpcProvider } from '@polkadot-api/json-rpc-provider';

interface ParsedJsonRpcConnection {
    send: <T extends {}>(message: T) => void;
    disconnect: () => void;
}
type ParsedJsonRpcProvider = (onMesage: <T extends {}>(message: T) => void) => ParsedJsonRpcConnection;
type ParsedJsonRpcEnhancer = (base: ParsedJsonRpcProvider) => ParsedJsonRpcProvider;
declare const toParsed: (base: JsonRpcProvider) => ParsedJsonRpcProvider;
declare const fromParsed: (base: ParsedJsonRpcProvider) => JsonRpcProvider;
declare const parsed: (...enhancers: Array<ParsedJsonRpcEnhancer>) => ((base: JsonRpcProvider) => JsonRpcProvider);

declare const fixPrematureBlocks: ParsedJsonRpcEnhancer;

declare const fixDescendantValues: ParsedJsonRpcEnhancer;

declare const fixUnorderedBlocks: ParsedJsonRpcEnhancer;

declare const fixUnorderedEvents: ParsedJsonRpcEnhancer;

declare const patchChainHeadEvents: ParsedJsonRpcEnhancer;

declare const unpinHash: ParsedJsonRpcEnhancer;

declare const translate: ParsedJsonRpcEnhancer;

declare const withNumericIds: ParsedJsonRpcEnhancer;

declare const chainHead: {
    body: string;
    call: string;
    continue: string;
    follow: string;
    header: string;
    stopOperation: string;
    storage: string;
    unfollow: string;
    unpin: string;
};
declare const transaction: {
    broadcast: string;
    stop: string;
};
declare const chainSpec: {
    chainName: string;
    genesisHash: string;
    properties: string;
};

declare const methods_chainHead: typeof chainHead;
declare const methods_chainSpec: typeof chainSpec;
declare const methods_transaction: typeof transaction;
declare namespace methods {
  export { methods_chainHead as chainHead, methods_chainSpec as chainSpec, methods_transaction as transaction };
}

declare const withPolkadotSdkCompat: (base: _polkadot_api_json_rpc_provider.JsonRpcProvider) => _polkadot_api_json_rpc_provider.JsonRpcProvider;

export { type ParsedJsonRpcConnection, type ParsedJsonRpcEnhancer, type ParsedJsonRpcProvider, fixDescendantValues, fixPrematureBlocks, fixUnorderedBlocks, fixUnorderedEvents, fromParsed, methods, parsed, patchChainHeadEvents, toParsed, translate, unpinHash, withNumericIds, withPolkadotSdkCompat };
