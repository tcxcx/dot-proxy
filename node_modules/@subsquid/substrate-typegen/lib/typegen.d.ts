import { SpecVersion } from '@subsquid/substrate-metadata-explorer/lib/specVersion';
import { Runtime } from '@subsquid/substrate-runtime';
import { OldSpecsBundle, OldTypesBundle } from '@subsquid/substrate-runtime/lib/metadata';
import { OutDir } from '@subsquid/util-internal-code-printer';
import { Sts } from './ifs';
export interface TypegenOptions extends ItemSelection {
    outDir: string;
    specVersions: SpecVersion[];
    typesBundle?: OldTypesBundle | OldSpecsBundle;
    pallets?: {
        [name: string]: ItemSelection | boolean;
    };
}
export interface ItemSelection {
    events?: string[] | boolean;
    calls?: string[] | boolean;
    storage?: string[] | boolean;
    constants?: string[] | boolean;
}
export declare class Typegen {
    private options;
    static generate(options: TypegenOptions): void;
    private sts;
    readonly dir: OutDir;
    private constructor();
    private generate;
    private generateEnums;
    private generateConsts;
    private generateStorage;
    private events;
    private calls;
    private storageItems;
    private constants;
    private collectItems;
    getVersionName(runtime: Runtime): string;
    private specNameNotChanged;
    private runtimes;
    getSts(runtime: Runtime): Sts;
}
//# sourceMappingURL=typegen.d.ts.map