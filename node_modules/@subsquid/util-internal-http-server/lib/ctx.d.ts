/// <reference types="node" />
import http from 'http';
export interface HttpRequest extends http.IncomingMessage {
    method: string;
    url: string;
}
export interface HttpResponse extends http.ServerResponse {
}
export interface HttpContextOptions {
    maxRequestBody: number;
}
export declare class HttpContext<Params = object> {
    readonly request: HttpRequest;
    readonly response: HttpResponse;
    params: Params;
    private options;
    private _url?;
    private requestBodyConsumed;
    constructor(request: HttpRequest, response: HttpResponse, params: Params, options: HttpContextOptions);
    get url(): URL;
    send(status: number, body?: string | Uint8Array | object, contentType?: string): void;
    getContentLength(): number | undefined;
    getText(): Promise<string>;
    private consume;
    getJson<T = unknown>(): Promise<T>;
}
//# sourceMappingURL=ctx.d.ts.map