"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Throttler = void 0;
const misc_1 = require("./misc");
class Throttler {
    constructor(fn, interval, prefetch = false) {
        this.fn = fn;
        this.interval = interval;
        this.prefetch = prefetch;
        this.lastAccess = -Infinity;
    }
    call() {
        if (this.pending)
            return this.pending;
        let pause = this.interval - Date.now() + this.lastAccess;
        return this.performCall(pause);
    }
    async get() {
        let now = Date.now();
        if (now - this.lastAccess < this.interval) {
            return this.lastValue;
        }
        else {
            return this.performCall(0);
        }
    }
    performCall(pause) {
        if (this.pending)
            return this.pending;
        return this.pending = this.execute(pause).finally(() => {
            this.pending = undefined;
            if (this.prefetch) {
                let pause = Math.round(this.interval * 0.9);
                this.performCall(pause).catch(() => { });
            }
        });
    }
    async execute(pause) {
        if (pause > 0) {
            await (0, misc_1.wait)(pause);
        }
        this.lastValue = await this.fn();
        this.lastAccess = Date.now();
        return this.lastValue;
    }
}
exports.Throttler = Throttler;
//# sourceMappingURL=throttler.js.map