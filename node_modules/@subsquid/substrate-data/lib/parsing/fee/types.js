"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AcalaTransactionFeePaid = exports.TransactionFeePaid = exports.ExtrinsicFailed = exports.ExtrinsicSuccessLegacy = exports.ExtrinsicSuccessLatest = exports.DispatchInfo = exports.BlockWeightsConst = exports.LengthToFeeConst = exports.WeightToFeeConst = exports.ExtrinsicBaseWeightConst = exports.TransactionByteFeeConst = exports.NextFeeMultiplier = void 0;
const sts_1 = require("@subsquid/substrate-runtime/lib/sts");
exports.NextFeeMultiplier = (0, sts_1.numeric)();
exports.TransactionByteFeeConst = (0, sts_1.numeric)();
exports.ExtrinsicBaseWeightConst = (0, sts_1.numeric)();
const WeightToFeeCoefficient = (0, sts_1.struct)({
    coeffInteger: (0, sts_1.numeric)(),
    coeffFrac: (0, sts_1.number)(),
    negative: (0, sts_1.boolean)(),
    degree: (0, sts_1.number)()
});
exports.WeightToFeeConst = (0, sts_1.array)(WeightToFeeCoefficient);
exports.LengthToFeeConst = exports.WeightToFeeConst;
const BaseWeight = (0, sts_1.struct)({
    baseExtrinsic: (0, sts_1.numeric)()
});
exports.BlockWeightsConst = (0, sts_1.struct)({
    perClass: (0, sts_1.struct)({
        normal: BaseWeight,
        operational: BaseWeight,
        mandatory: BaseWeight
    })
});
exports.DispatchInfo = (0, sts_1.struct)({
    weight: (0, sts_1.bigint)(),
    class: (0, sts_1.closedEnum)({
        Normal: (0, sts_1.unit)(),
        Operational: (0, sts_1.unit)(),
        Mandatory: (0, sts_1.unit)()
    }),
    paysFee: (0, sts_1.union)((0, sts_1.boolean)(), (0, sts_1.closedEnum)({
        Yes: (0, sts_1.unit)(),
        No: (0, sts_1.unit)()
    }))
});
exports.ExtrinsicSuccessLatest = (0, sts_1.struct)({
    dispatchInfo: exports.DispatchInfo
});
exports.ExtrinsicSuccessLegacy = exports.DispatchInfo;
exports.ExtrinsicFailed = (0, sts_1.union)((0, sts_1.struct)({
    dispatchInfo: exports.DispatchInfo
}), (0, sts_1.tuple)([(0, sts_1.unknown)(), exports.DispatchInfo]));
exports.TransactionFeePaid = (0, sts_1.struct)({
    actualFee: (0, sts_1.numeric)(),
    tip: (0, sts_1.numeric)()
});
exports.AcalaTransactionFeePaid = (0, sts_1.struct)({
    actualFee: (0, sts_1.numeric)(),
    actualTip: (0, sts_1.numeric)()
});
//# sourceMappingURL=types.js.map