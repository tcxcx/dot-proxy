"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Prev = exports.runtimeVersionEquals = exports.toQty = exports.qty2Int = void 0;
const util_internal_1 = require("@subsquid/util-internal");
const assert_1 = __importDefault(require("assert"));
function qty2Int(qty) {
    let i = parseInt(qty, 16);
    (0, assert_1.default)(Number.isSafeInteger(i));
    return i;
}
exports.qty2Int = qty2Int;
function toQty(n) {
    return '0x' + n.toString(16);
}
exports.toQty = toQty;
function runtimeVersionEquals(a, b) {
    return a.specName == b.specName
        && a.specVersion == b.specVersion
        && a.implName == b.implName
        && a.implVersion == b.implVersion;
}
exports.runtimeVersionEquals = runtimeVersionEquals;
class Prev {
    constructor(maxSize = 2) {
        this.maxSize = maxSize;
        this.items = [];
        (0, assert_1.default)(maxSize >= 1);
    }
    get(height) {
        return this.getItem(height)?.value;
    }
    getItem(height) {
        this.rollbackTo(height - 1);
        return (0, util_internal_1.maybeLast)(this.items);
    }
    set(height, value) {
        this.rollbackTo(height - 1);
        this.items.push({ height, value });
        if (this.items.length > this.maxSize) {
            this.items.shift();
        }
    }
    rollbackTo(height) {
        while (this.items.length && (0, util_internal_1.last)(this.items).height > height) {
            this.items.pop();
        }
    }
}
exports.Prev = Prev;
//# sourceMappingURL=util.js.map