import { HttpClient } from '@subsquid/http-client';
import type { Logger } from '@subsquid/logger';
export interface ArchiveQuery {
    fromBlock: number;
    toBlock?: number;
}
export interface Block {
    header: {
        number: number;
        hash: string;
    };
}
export interface ArchiveClientOptions {
    http: HttpClient;
    url: string;
    queryTimeout?: number;
    log?: Logger;
}
export declare class ArchiveClient {
    private url;
    private http;
    private queryTimeout;
    private retrySchedule;
    private log?;
    constructor(options: ArchiveClientOptions);
    private getRouterUrl;
    getHeight(): Promise<number>;
    query<B extends Block = Block, Q extends ArchiveQuery = ArchiveQuery>(query: Q): Promise<B[]>;
    private retry;
}
//# sourceMappingURL=client.d.ts.map