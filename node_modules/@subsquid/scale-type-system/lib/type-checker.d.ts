import { Ti, Type as ScaleType } from '@subsquid/scale-codec';
export { Ti, ScaleType };
export interface Type<T = unknown> {
    match(typeChecker: TypeChecker, ty: ScaleType): boolean;
    phantom(): T;
}
export declare abstract class BaseType<T> implements Type<T> {
    abstract match(typeChecker: TypeChecker, ty: ScaleType): boolean;
    phantom(): T;
}
export declare class TypeChecker {
    private types;
    private checked;
    private checking;
    constructor(types: ScaleType[]);
    getScaleType(ti: Ti): ScaleType;
    match(ti: Ti, type: Type): boolean;
}
//# sourceMappingURL=type-checker.d.ts.map