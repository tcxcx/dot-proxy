import { BaseType, ScaleType, Type, TypeChecker } from '../type-checker';
import { GetType } from '../type-util';
export type GetTupleType<T> = {
    [I in keyof T]: GetType<T[I]>;
};
export declare class TupleType<T extends readonly Type[]> extends BaseType<GetTupleType<T>> {
    private _tuple;
    constructor(_tuple: () => T);
    match(typeChecker: TypeChecker, ty: ScaleType): boolean;
    private getDef;
}
//# sourceMappingURL=tuple.d.ts.map