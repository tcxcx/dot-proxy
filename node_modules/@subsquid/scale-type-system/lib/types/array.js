"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayType = void 0;
const scale_codec_1 = require("@subsquid/scale-codec");
const util_internal_1 = require("@subsquid/util-internal");
const type_checker_1 = require("../type-checker");
class ArrayType extends type_checker_1.BaseType {
    constructor(type) {
        super();
        this.type = type;
    }
    match(typeChecker, ty) {
        switch (ty.kind) {
            case scale_codec_1.TypeKind.Sequence:
            case scale_codec_1.TypeKind.Array:
                return typeChecker.match(ty.type, this.getType());
            default:
                return false;
        }
    }
    getType() {
        return this.type();
    }
}
exports.ArrayType = ArrayType;
__decorate([
    util_internal_1.def,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Object)
], ArrayType.prototype, "getType", null);
//# sourceMappingURL=array.js.map