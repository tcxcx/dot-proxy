import type { RpcClient } from './client';
export interface Subscription<T> {
    method: string;
    params?: unknown[];
    notification: string;
    unsubscribe: string;
    onMessage: (msg: T) => void;
    onError: (err: Error) => void;
    resubscribeOnConnectionLoss?: boolean;
    retryAttempts?: number;
}
export interface SubscriptionHandle {
    readonly isActive: boolean;
    readonly isClosed: boolean;
    close(): void;
}
export declare class Subscriptions {
    private client;
    private active;
    constructor(client: RpcClient);
    add<T>(sub: Subscription<T>): SubscriptionHandle;
    private onNotification;
    private onReset;
}
//# sourceMappingURL=subscriptions.d.ts.map