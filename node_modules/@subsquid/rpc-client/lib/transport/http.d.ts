import { HttpClientOptions } from '@subsquid/http-client';
import { Logger } from '@subsquid/logger';
import { Connection, RpcRequest, RpcResponse } from '../interfaces';
export interface HttpConnectionOptions {
    url: string;
    fixUnsafeIntegers?: boolean;
    log?: Logger;
    headers?: HttpClientOptions['headers'];
}
export declare class HttpConnection implements Connection {
    private url;
    private log?;
    private agent;
    private http;
    constructor(options: HttpConnectionOptions);
    close(err?: Error): void;
    connect(): Promise<void>;
    call(req: RpcRequest, timeout?: number): Promise<RpcResponse>;
    batchCall(batch: RpcRequest[], timeout?: number): Promise<RpcResponse[]>;
}
//# sourceMappingURL=http.d.ts.map