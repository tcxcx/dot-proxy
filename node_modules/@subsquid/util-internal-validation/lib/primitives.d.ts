import { Validator } from './interface';
export declare const ANY: Validator<any>;
export declare const ANY_OBJECT: Validator<object>;
export declare const STRING: Validator<string>;
/**
 * Safe integer
 */
export declare const INT: Validator<number>;
export declare const ANY_INT: Validator<bigint, number | string>;
/**
 * Safe integer greater or equal to 0
 */
export declare const NAT: Validator<number>;
export declare const BIG_NAT: Validator<bigint, string>;
export declare const ANY_NAT: Validator<bigint, number | string>;
export declare const STRING_NAT: Validator<number, string>;
export declare const STRING_FLOAT: Validator<number, string>;
/**
 * Hex encoded binary string or natural number
 */
type Bytes = string;
/**
 * Hex encoded natural number of an arbitrary size
 */
export declare const QTY: Validator<bigint, Bytes>;
/**
 * Hex encoded safe natural number
 */
export declare const SMALL_QTY: Validator<number, Bytes>;
/**
 * Hex encoded binary string
 */
export declare const BYTES: Validator<Bytes>;
type Base58Bytes = string;
type Base64Bytes = string;
/**
 * Base58 encoded binary string
 */
export declare const B58: Validator<Base58Bytes>;
/**
 * Base64 encoded binary string
 */
export declare const B64: Validator<Base64Bytes>;
export declare const BOOLEAN: Validator<boolean>;
export {};
//# sourceMappingURL=primitives.d.ts.map