"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecordValidator = void 0;
const error_1 = require("../error");
class RecordValidator {
    constructor(key, value) {
        this.key = key;
        this.value = value;
    }
    cast(record) {
        if (typeof record != 'object' || !record)
            return new error_1.ValidationFailure(record, `{value} is not an object`);
        let result = {};
        for (let key in record) {
            let k = this.key.cast(key);
            if (k instanceof error_1.ValidationFailure) {
                k.path.push(key);
                return k;
            }
            let v = this.value.cast(record[key]);
            if (v instanceof error_1.ValidationFailure) {
                v.path.push(key);
                return v;
            }
            result[k] = v;
        }
        return result;
    }
    validate(record) {
        if (typeof record != 'object' || !record)
            return new error_1.ValidationFailure(record, `{value} is not an object`);
        for (let key in record) {
            let err = this.key.validate(key) || this.value.validate(record[key]);
            if (err) {
                err.path.push(key);
                return err;
            }
        }
    }
    phantom() {
        throw new Error();
    }
}
exports.RecordValidator = RecordValidator;
//# sourceMappingURL=record.js.map