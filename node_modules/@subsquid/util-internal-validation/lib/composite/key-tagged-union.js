"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeyTaggedUnionValidator = void 0;
const error_1 = require("../error");
const util_1 = require("../util");
class KeyTaggedUnionValidator {
    constructor(union) {
        this.union = union;
    }
    cast(value) {
        let tag = this.getTag(value);
        if (tag instanceof error_1.ValidationFailure)
            return tag;
        let val = this.union[tag].cast(value[tag]);
        if (val instanceof error_1.ValidationFailure) {
            val.path.push(tag);
            return val;
        }
        return { [tag]: val };
    }
    validate(value) {
        let tag = this.getTag(value);
        if (tag instanceof error_1.ValidationFailure)
            return tag;
        let err = this.union[tag].validate(value[tag]);
        if (err) {
            err.path.push(tag);
            return err;
        }
    }
    phantom() {
        throw new Error();
    }
    getTag(value) {
        if (typeof value != 'object' || !value)
            return new error_1.ValidationFailure(value, '{value} is not an object');
        let tag;
        for (let key in value) {
            let validator = this.union[key];
            if (validator == null)
                continue;
            if (tag == null) {
                tag = key;
            }
            else {
                return new error_1.ValidationFailure(value, this.getOnlyOneOfMessage());
            }
        }
        if (tag == null)
            return new error_1.ValidationFailure(value, this.getNoPropsMessage());
        return tag;
    }
    getOnlyOneOfMessage() {
        if (this.onlyOneOfMessage)
            return this.onlyOneOfMessage;
        return this.onlyOneOfMessage = `only one of ${(0, util_1.print)(Object.keys(this.union))} properties expected to be present in the object, but got {value}`;
    }
    getNoPropsMessage() {
        if (this.noPropsMessage)
            return this.noPropsMessage;
        return this.noPropsMessage = `expected an object with one of ${(0, util_1.print)(Object.keys(this.union))} properties, but got {value}`;
    }
}
exports.KeyTaggedUnionValidator = KeyTaggedUnionValidator;
//# sourceMappingURL=key-tagged-union.js.map