import { ValidationFailure } from '../error';
import { Validator } from '../interface';
export declare class RecordValidator<K extends string, V, S> implements Validator<Record<K, V>, Record<K, S>> {
    readonly key: Validator<K>;
    readonly value: Validator<V, S>;
    constructor(key: Validator<K>, value: Validator<V, S>);
    cast(record: unknown): ValidationFailure | Record<K, V>;
    validate(record: unknown): ValidationFailure | undefined;
    phantom(): Record<K, S>;
}
//# sourceMappingURL=record.d.ts.map