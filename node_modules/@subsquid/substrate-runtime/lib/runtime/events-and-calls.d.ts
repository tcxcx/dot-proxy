import * as sts from '@subsquid/scale-type-system';
import { Ti, Type, Variant } from '../metadata';
import { QualifiedName } from './interfaces';
export interface EACDefinition extends Variant {
    pallet: string;
}
export declare class EACRegistry {
    private types;
    readonly definitions: Record<QualifiedName, EACDefinition>;
    private typeRecords;
    constructor(types: Type[], ti: Ti);
    has(name: QualifiedName): boolean;
    get(name: QualifiedName): EACDefinition;
    checkType(name: QualifiedName, ty: sts.Type): boolean;
    private getTypeRecord;
    private createScaleType;
    getTypeHash(name: QualifiedName): string;
}
//# sourceMappingURL=events-and-calls.d.ts.map