"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert = __importStar(require("assert"));
const node_test_1 = require("node:test");
const index_1 = require("./index");
function expect(json, out) {
    assert.strictEqual((0, index_1.fixUnsafeIntegers)(json), out);
}
(0, node_test_1.describe)('fixUnsafeIntegers()', function () {
    (0, node_test_1.it)('rewrites big integers to strings', function () {
        expect('[1, 2, 9999999999999999999999999, 5, 1000000000000000000000000000]', '[1, 2, "9999999999999999999999999", 5, "1000000000000000000000000000"]');
    });
    (0, node_test_1.it)('does not rewrite floats', function () {
        expect('{distance: 0.0}', '{distance: 0.0}');
        expect('{distance: 1e99}', '{distance: 1e99}');
        expect('{distance: 123.045e-10}', '{distance: 123.045e-10}');
    });
    (0, node_test_1.it)('does not rewrite strings', function () {
        expect('{hello: "[1, 2, 9999999999999999999999999, \\"5, 1000000000000000000000000000]"}', '{hello: "[1, 2, 9999999999999999999999999, \\"5, 1000000000000000000000000000]"}');
    });
});
//# sourceMappingURL=test.js.map