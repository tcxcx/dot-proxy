services:
  db:
    container_name: dot_proxy_gov_db
    image: postgres:14
    environment:
      POSTGRES_DB: dot_proxy_gov
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    shm_size: 1gb
    ports:
      - '5432:5432'
    volumes:
      - ./data/db:/var/lib/postgresql/data
    networks:
      - dot_proxy_gov_network

  db-migrate:
    container_name: dot_proxy_gov_db_migrate
    image: node:18
    restart: on-failure
    depends_on:
      - db
    volumes:
      - ./packages/squid:/app
    working_dir: /app
    environment:
      DB_NAME: dot_proxy_gov
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: db
    command: >
      bash -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        npm install &&
        npm run build &&
        npm run codegen &&
        npm run db:migrate"
    networks:
      - dot_proxy_gov_network

  squid-processor:
    container_name: dot_proxy_gov_processor
    image: node:18
    restart: on-failure
    depends_on:
      - db-migrate
    volumes:
      - ./packages/squid:/app
    working_dir: /app
    environment:
      DB_NAME: dot_proxy_gov
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: db
      BLOCK_START: 0
      RPC_WS: "wss://rpc.polkadot.io"
      CHAIN_ID: "polkadot"
      IS_ETHEREUM: "false"
      GATEWAY_URL: "https://v2.archive.subsquid.io/network/polkadot"
    command: >
      bash -c "
        echo 'Starting processor...' &&
        npm run start"
    networks:
      - dot_proxy_gov_network

  squid-graphql:
    container_name: dot_proxy_gov_graphql
    image: node:18
    restart: on-failure
    depends_on:
      - squid-processor
    ports:
      - '4350:4350'
    volumes:
      - ./packages/squid:/app
    working_dir: /app
    environment:
      DB_NAME: dot_proxy_gov
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASS: postgres
      DB_HOST: db
      GQL_PORT: 4350
    command: >
      bash -c "
        echo 'Starting GraphQL server...' &&
        npm run graphql-server"
    networks:
      - dot_proxy_gov_network

  ui:
    container_name: dot_proxy_gov_ui
    build:
      context: ./packages/ui
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SQUID_URL: 'http://squid-graphql:4350/graphql'
    ports:
      - '3000:3000'
    environment:
      NEXT_PUBLIC_SQUID_URL: 'http://squid-graphql:4350/graphql'
      PAPI_SKIP_GENERATE: '1'
      SKIP_TS: '1'
      NEXT_SKIP_TYPECHECKS: '1'
      NEXT_IGNORE_ESG_ERRORS: '1'
      NEXT_SKIP_OPT_CHECKS: 'true'
      DISABLE_ESLINT_PLUGIN: 'true'
    depends_on:
      - squid-graphql
    networks:
      - dot_proxy_gov_network

networks:
  dot_proxy_gov_network:
    driver: bridge
